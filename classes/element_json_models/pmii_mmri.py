# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class pmii_mmri_0(BaseModel):
    type_de_control : Optional[Literal['Visite de surveillance']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service de l'élément, si présent.")
    date_de_fabrication : Optional[str] = Field(description="La date de fabrication (peut être appelé plaque) de l'élément, si présent.")
    implante_sur_un_site_seveso_seuil_haut_ou_bas : Optional[bool] = Field(description="L'élément est-il implanté sur un site Seveso seuil haut ou bas, si présent.")
    adresse_du_fabricant : Optional[str] = Field(description="L'adresse du fabricant de l'élément, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant de l'élément, si présent.")
    en_location : Optional[bool] = Field(description=".")


class pmii_mmri_1(BaseModel):
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut de l'élément, si présent.")
    periodicite_selon_le_plan_de_surveillance : Optional[int] = Field(description="La périodicité selon le plan de surveillance de l'élément, si présent.")
    la_defaillance_de_l_element_remet_elle_en_cause_de_facon_importante_la_securite_var : Optional[bool] = Field(description="La défaillance de l'élément remet-elle en cause de façon importante la sécurité, si présent.")


class pmii_mmri_2(BaseModel):
    type_de_mesures_de_maitrise_des_risques_instrumentees_mmri_var : Optional[str] = Field(description="Le type de mesures de maîtrise des risques instrumentées (MMRI) de l'élément, si présent.")
