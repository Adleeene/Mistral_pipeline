# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class rayonnements_non_ionisant_0(BaseModel):
    type_de_control : Optional[Literal['Évaluation des risques', 'Maintenance périodique']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service de l'élément de rayonnement non ionisant, si présent.")
    categorie_de_frequence : Optional[Literal['Basse fréquence (<100 kHz)', 'Haute fréquence (>100 kHz)', '']] = Field(description="La catégorie de fréquence de l'élément de rayonnement non ionisant, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut du rayonement non ionisant, si présent.")
    installation_qui_genere_un_rayonnement_optique : Optional[str] = Field(description="Le nom de l'installation qui génère un rayonnement optique, si présent.")
    l_etude_des_risques_de_rayonnement_est_elle_evaluee_par_mesurage_var : Optional[bool] = Field(description="L'étude des risques de rayonnement est-elle évaluée par mesurage, si présent.")
    installation_qui_genere_un_rayonnement_electromagnetique : Optional[str] = Field(description="Le nom de l'installation qui génère un rayonnement électromagnétique, si présent.")
    numero_identification : Optional[str] = Field(description="Le numéro d'identification de l'élément de rayonnement non ionisant, si présent.")
    frequence_khz_var : Optional[float] = Field(description="La fréquence en kHz de l'élément de rayonnement non ionisant, si présent.")
    type_de_rayonnement : Optional[Literal['Optique\u202fartificiel', 'Électromagnétique', '']] = Field(description="Le type de rayonnement non ionisant, si présent.")
    type_de_rayonnement_optique_artificiel : Optional[Literal['Ultraviolet', 'Lumière visible', 'Infrarouge', 'Laser', 'Autre', '']] = Field(description="Le type de rayonnement optique artificiel, si présent.")
