# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class rayonnements_instrument_de_radioprotection_0(BaseModel):
    type_de_control : Optional[Literal['Étalonnage']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service de l'instrument de radioprotection, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant de l'instrument de radioprotection, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut de l'instrument de radioprotection, si présent.")
    modele : Optional[str] = Field(description="Le modèle (ou type) de l'instrument de radioprotection, si présent.")
    gamme : Optional[Literal['Fixe', 'Portative', '']] = Field(description="La gamme de l'instrument de radioprotection, si présent.")
    autre_type_d_appareil : Optional[str] = Field(description=".")
    type_d_appareil : Optional[Literal['Mesurage du risque d’exposition externe', 'Détection de la contamination', 'Dosimètre opérationnel', 'Autre', '']] = Field(description="Le type d'appareil de l'instrument de radioprotection, si présent.")
