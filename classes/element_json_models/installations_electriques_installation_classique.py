# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class installations_electriques_installation_classique_0(BaseModel):
    type_de_control : Optional[Literal['Vérification périodique', 'Contrôle quadriennal', 'Thermographie infrarouge', "Contrôle selon l'APSAD D18", 'Contrôle relatif aux ERP', 'Contrôle risque inflammable (ICPE 2160)']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_verification_initiale : Optional[str] = Field(description="La date de vérification initiale de l'installation électrique classique, si présent.")
    periodicite_des_controles_par_thermographie_q19_infrarouge_en_mois_var : Optional[int] = Field(description="La périodicité des contrôles par thermographie Q19 infrarouge en mois, si présent.")
    rapport_apsad_d18_demande_par_l_assureur_var : Optional[bool] = Field(description="Le rapport APSAD D18 demandé par l'assureur, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut de l'installation électrique classique, si présent.")
    controle_par_thermographie_infrarouge_demande_par_l_assureur_q19_var : Optional[bool] = Field(description="Le contrôle par thermographie infrarouge demandé par l'assureur Q19, si présent.")
    presence_d_un_silo_de_cereales_de_grains_ou_de_produits_organiques_degageant_des_poussieres_inflammables_var : Optional[bool] = Field(description="La présence d'un silo de céréales, de grains ou de produits organiques dégageant des poussières inflammables, si présent.")
    cette_installation_est_elle_comprise_dans_une_zone_erp_var : Optional[bool] = Field(description="Cette installation est-elle comprise dans une zone ERP, si présent.")
    type_element : Optional[Literal['Bâtiment', 'Local TGBT', 'Armoire', 'Autre', '']] = Field(description="Le type d'élément de l'installation électrique classique, si présent.")
    autre_type_d_installation : Optional[str] = Field(description=".")
