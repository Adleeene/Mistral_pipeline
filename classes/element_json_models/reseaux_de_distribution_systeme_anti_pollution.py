# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class reseaux_de_distribution_systeme_anti_pollution_0(BaseModel):
    type_de_control : Optional[Literal['Vérification périodique', 'Entretien']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service du système anti-pollution, si présent.")
    niveaux_de_protection : Optional[Literal['Au niveau des points de livraison', 'Au niveau des piquages', 'Au niveau des équipements', '']] = Field(description="Les niveaux de protection du système anti-pollution, si présent.")
    autre_nature_du_fluide : Optional[str] = Field(description=".")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut du système anti-pollution, si présent.")
    modele_de_disconnecteur : Optional[Literal['BA : Disconnecteur à zone de pression réduite contrôlable', 'CA : Disconnecteur à zone de pression différente non contrôlable', 'HA : Disconnecteur d’extrémité', 'Autre', '']] = Field(description="Le modèle (ou type) de disconnecteur du système anti-pollution, si présent.")


class reseaux_de_distribution_systeme_anti_pollution_1(BaseModel):
    presence_logo_nf : Optional[bool] = Field(description="La présence du logo NF sur le système anti-pollution, si présent.")
    le_systeme_protege_un_reseau_de : Optional[Literal['Incendie', 'Alimentation générale', 'Production technique', 'Arrosage', 'Chauffage ou climatisation', 'Autre', '']] = Field(description="Le système protège-t-il un réseau de distribution d'eau potable, si présent.")
    diametre : Optional[str] = Field(description="Le diamètre du système anti-pollution, si présent.")
    position : Optional[Literal['Verticale', 'Horizontale', '']] = Field(description="La position du système anti-pollution, si présent.")
    modele_de_clapet : Optional[Literal['EA : Clapet de non-retour anti-pollution contrôlable', 'EB : Clapet de non-retour anti-pollution non contrôlable', 'Autre', '']] = Field(description="Le modèle (ou type) de clapet du système anti-pollution, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant du système anti-pollution, si présent.")
    nature_du_fluide_present_dans_l_installation : Optional[Literal['Eau potable', 'Eau ou fluide ne présentant pas de danger pour la santé', 'Eau ou fluide présentant un certain danger pour la santé du fait de substance toxiques', 'Eau ou fluide présentant un danger toxicologique', 'Eau ou fluide présentant un danger microbiologique ou viral', 'Autre', '']] = Field(description="La nature du fluide présent dans l'installation, si présent.")


class reseaux_de_distribution_systeme_anti_pollution_2(BaseModel):
    autre_type_de_systeme_anti_pollution : Optional[str] = Field(description=".")
    type_de_systeme_anti_pollution : Optional[Literal['Disconnecteur', 'Clapet', 'Autre', '']] = Field(description="Le type de système anti-pollution, si présent.")
    autre_type_de_reseau : Optional[str] = Field(description=".")
    autre_type_de_clapet : Optional[str] = Field(description=".")
    autre_type_de_disconnecteur : Optional[str] = Field(description=".")
