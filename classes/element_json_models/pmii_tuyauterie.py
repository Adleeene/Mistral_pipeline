# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class pmii_tuyauterie_0(BaseModel):
    type_de_control : Optional[Literal['Contrôle périodique']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service de la tuyauterie, si présent.")
    date_de_premiere_epreuve : Optional[str] = Field(description="La date de première épreuve de la tuyauterie, si présent.")
    date_de_fabrication : Optional[str] = Field(description="La date de fabrication (peut être appelé plaque) de la tuyauterie, si présent.")
    phrase_de_risque_mention_de_danger : Optional[Literal['rien', '']] = Field(description="La phrase de risque mention de danger de la tuyauterie, si présent.")
    la_defaillance_de_l_equipement_peut_il_causer_un_risque_technologique_au_sens_de_l_arrete_du_29_09_2005_var : Optional[bool] = Field(description="La défaillance de l'équipement peut-il causer un risque technologique au sens de l'arrêté du 29/09/2005, si présent.")
    adresse_du_fabricant : Optional[str] = Field(description="L'adresse du fabricant de la tuyauterie, si présent.")


class pmii_tuyauterie_1(BaseModel):
    lieu_de_fabrication : Optional[str] = Field(description="Le lieu de fabrication de la tuyauterie, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant de la tuyauterie, si présent.")
    pid : Optional[str] = Field(description="Le PID de la tuyauterie, si présent.")
    dn : Optional[int] = Field(description=".")
    phase_du_fluide : Optional[Literal['Gaz', 'Vapeur ou eau surchauffée', 'Liquide dont la tension de vapeur, à TS, est inférieure à la pression atmosphérique normale (1,013 bar)', '']] = Field(description="La phase du fluide de la tuyauterie, si présent.")
    l_etablissement_du_plan_d_inspection_est_il_base_sur_une_methologie_rbi_var : Optional[bool] = Field(description="L'établissement du plan d'inspection est-il basé sur une méthologie RBI, si présent.")
    classe_de_service_de_la_tuyauterie : Optional[Literal['Classe 1', 'Classe 2', 'Classe 3', 'Classe 4', '']] = Field(description="La classe de service de la tuyauterie, si présent.")


class pmii_tuyauterie_2(BaseModel):
    materiau : Optional[Literal['Métallique', 'Non métallique', '']] = Field(description="Le matériau de la tuyauterie, si présent.")
    pression_de_calcul_bar_var : Optional[float] = Field(description="La pression de calcul en bar de la tuyauterie, si présent.")
    temperature_de_calcul_c_var : Optional[float] = Field(description="La temperature de calcul en °C de la tuyauterie, si présent.")
    defini_selon_un_plan_de_controle : Optional[bool] = Field(description="Défini selon un plan de contrôle, si présent.")
    pression_de_service_bar_var : Optional[float] = Field(description="La pression de service en bar de la tuyauterie, si présent.")
    est_ce_qu_une_defaillance_liee_au_vieillissement_peut_generer_un_risque_environnemental_important : Optional[Literal['Oui', 'Non', 'Ne sais pas', '']] = Field(description="Est-ce qu'une défaillance liée au vieillissement peut générer un risque environnemental important, si présent.")
    produit_stocke : Optional[str] = Field(description="Le produit stocké dans la tuyauterie, si présent.")


class pmii_tuyauterie_3(BaseModel):
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut de la tuyauterie, si présent.")
    temperature_de_service_c_var : Optional[float] = Field(description="La temperature de service en °C de la tuyauterie, si présent.")
