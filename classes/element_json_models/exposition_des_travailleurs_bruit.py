# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class exposition_des_travailleurs_bruit_0(BaseModel):
    type_de_control : Optional[Literal['Evaluation des niveaux de bruit', 'Evaluation des niveaux de bruit en limite de propriété']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_la_derniere_analyse : Optional[str] = Field(description=".")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description=".")
    l_evaluation_des_niveaux_de_bruit_comprend_elle_le_mesurage_var : Optional[bool] = Field(description=".")
    niveau_d_exposition_au_bruit_evalue_et_retenu_lors_de_la_derniere_evaluation_en_db_var : Optional[float] = Field(description=".")
    niveau_d_exposition_au_bruit_residuel_mesure_en_db_var : Optional[float] = Field(description=".")
    conditions_meteorologiques_lors_de_la_derniere_evaluation : Optional[str] = Field(description=".")
    source_s_de_bruit : Optional[str] = Field(description=".")
    materiel_utilise : Optional[str] = Field(description=".")
    reference_du_materiel_utilise : Optional[str] = Field(description=".")
    cet_element_est_il_concerne_par_la_mesure_des_niveaux_de_bruit_en_limite_de_propriete_var : Optional[bool] = Field(description=".")
