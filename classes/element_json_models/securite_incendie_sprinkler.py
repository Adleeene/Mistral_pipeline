# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class securite_incendie_sprinkler_0(BaseModel):
    type_de_control : Optional[Literal['Remise en conformité', 'Vérification', 'Entretien approfondi', 'Entretien']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service_du_reseau : Optional[str] = Field(description="La date de mise en service du réseau de sprinkler, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant du sprinkler, si présent.")
    pression_statique_en_aval_du_poste_de_controle_bar_var : Optional[float] = Field(description="La pression statique en aval du poste de contrôle en bar du sprinkler, si présent.")
    pression_statique_en_amont_du_poste_de_controle_bar_var : Optional[float] = Field(description="La pression statique en amont du poste de contrôle en bar du sprinkler, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut du sprinkler, si présent.")
    type_element : Optional[Literal['Installation sous eau', 'Installation sous air', 'Installation alternative', 'Installation à pré-action', 'Installation déluge', 'Installation à Eau + Antigel', '']] = Field(description="Le type d'élément du sprinkler, si présent.")
