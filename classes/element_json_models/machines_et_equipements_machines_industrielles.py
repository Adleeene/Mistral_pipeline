# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class machines_et_equipements_machines_industrielles_0(BaseModel):
    type_de_control : Optional[Literal['Vérification générale périodique']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service de la machine industrielle, si présent.")
    date_de_fabrication : Optional[str] = Field(description="La date de fabrication (peut être appelé plaque) de la machine industrielle, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant de la machine industrielle, si présent.")
    etat_a_l_achat : Optional[Literal['Neuf', 'Occasion', '']] = Field(description="L'état à l'achat de la machine industrielle, si présent.")
    energie : Optional[Literal['Force humaine employée directement', 'Force humaine non employée directement', 'Motorisé', '']] = Field(description="L'énergie de la machine industrielle, si présent.")
    mode_de_chargement : Optional[Literal['Manuel', 'Automatique', '']] = Field(description="Le mode de chargement de la machine industrielle, si présent.")


class machines_et_equipements_machines_industrielles_1(BaseModel):
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut de la machine industrielle, si présent.")
    l_equipement_possede_t_il_un_compteur_permettant_d_evaluer_le_nombre_reel_d_heures_d_utilisation_et_de_justifier_sa_faible_utilisation_var : Optional[bool] = Field(description="L'équipement possède-t-il un compteur permettant d'évaluer le nombre réel d'heures d'utilisation et de justifier sa faible utilisation, si présent.")


class machines_et_equipements_machines_industrielles_2(BaseModel):
    type_de_machine_a_cylindre : Optional[Literal["Machine à cylindres pour l'industrie du caoutchouc", 'Autre', '']] = Field(description="Le type de machine à cylindre de la machine industrielle, si présent.")
    type_de_compacteur : Optional[Literal['Compacteur à déchets', "Système de compactage des véhicules de collecte d'ordures ou de déchets", 'Autre', '']] = Field(description="Le type de compacteur de la machine industrielle, si présent.")
    type_element : Optional[Literal['Presse', 'Massicot', 'Machine à cylindre', 'Compacteur', 'Centrifugeuse', 'Machine pour travaux', 'Autre', '']] = Field(description="Le type d'élément de la machine industrielle, si présent.")
    type_de_machine_pour_travaux : Optional[Literal["Machine mobile d'extraction, de terrassement, d'excavation ou de forage du sol à conducteur porté", 'Machine à battre les palplanches', 'Autre', '']] = Field(description="Le type de machine pour travaux de la machine industrielle, si présent.")
    type_de_presse : Optional[Literal['Presse mécanique pour le travail à froid des métaux', 'Presse hydraulique pour le travail à froid des métaux', 'Presse à vis', 'Presse à mouler par injection ou compression des matières plastiques ou du caoutchouc', 'Presse à mouler les métaux', "Presse à façonner les cuirs, peaux, papiers, cartons ou matières plastiques en feuille au moyen d'un emporte-pièce", 'Presse à platine telles que presse à dorer, à gaufrer, à découper', 'Presse à balles', 'Autre', '']] = Field(description="Le type de presse de la machine industrielle, si présent.")
    type_de_massicot : Optional[Literal['Massicot pour la découpe du papier, du carton, du bois ou des matières plastiques en feuille', 'Autre', '']] = Field(description="Le type de massicot de la machine industrielle, si présent.")
