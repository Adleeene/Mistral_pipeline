# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class transport_routier_vehicule_lourd_0(BaseModel):
    type_de_control : Optional[Literal['Entretien et maintenance', 'Contrôle technique']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_premiere_mise_en_circulation : Optional[str] = Field(description="La date de première mise en circulation du véhicule, si présent.")
    categorie_du_vehicule : Optional[Literal['Catégorie M1', 'Catégorie M2', 'Catégorie M3', 'Catégorie N2', 'Catégorie N3', 'Catégorie \t\tO3', 'Catégorie O4', 'Véhicule composé d’un tracteur et d’une semi remorque', 'Navette \turbaine', 'Remorque', 'Aucune catégorie', '']] = Field(description="La catégorie du véhicule, si présent.")
    charge_utile_en_kg_var : Optional[float] = Field(description="La charge utile du véhicule en kilogrammes, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut du véhicule, si présent.")
    constructeur : Optional[str] = Field(description="Le nom du constructeur du véhicule, si présent.")


class transport_routier_vehicule_lourd_1(BaseModel):
    immatriculation : Optional[str] = Field(description="Le numéro d'immatriculation du véhicule, si présent.")
    modele : Optional[str] = Field(description="Le modèle (ou type) du véhicule, si présent.")
    numero_de_serie : Optional[str] = Field(description="Le numéro de série du véhicule, si présent.")
    utilisation_du_vehicule : Optional[Literal['Transport de personnes', 'Transport de marchandises', '']] = Field(description="L'utilisation du véhicule, si présent.")
    utilisation_specifique_du_vehicule : Optional[Literal['De collection', 'Agricole', 'Destiné à l’armée (Militaire)', 'École', 'Diplomatique', 'Aucune', '']] = Field(description="L'utilisation spécifique du véhicule, si présent.")
    poids_a_vide_pv_en_kg_var : Optional[float] = Field(description="Le poids à vide du véhicule en kilogrammes, si présent.")
    largeur_totale_en_m_var : Optional[float] = Field(description="La largeur totale du véhicule en mètres, si présent.")


class transport_routier_vehicule_lourd_2(BaseModel):
    nombre_de_place_assises_sauf_le_siege_conducteur_var : Optional[int] = Field(description="Le nombre de places assises sauf le siège conducteur, si présent.")
    carburant_utilise : Optional[Literal['Gasoil,Essence,GPL', 'GNV', 'Biocarburant', '']] = Field(description="Le carburant utilisé par le véhicule, si présent.")
    le_vehicule_doit_il_subir_un_controle_technique_specifique_a_une_reglementation_var : Optional[bool] = Field(description="Le véhicule doit-il subir un contrôle technique spécifique à une réglementation, si présent.")
    longueur_totale_en_m_var : Optional[str] = Field(description="La longueur totale du véhicule en mètres, si présent.")
    poids_total_autorise_en_charge_ptac_en_kg_var : Optional[float] = Field(description="Le poids total autorisé en charge du véhicule en kilogrammes, si présent.")


class transport_routier_vehicule_lourd_3(BaseModel):
    type_de_moteur : Optional[Literal['Electrique', 'Hybride', 'Thermique', '']] = Field(description="Le type de moteur du véhicule, si présent.")
