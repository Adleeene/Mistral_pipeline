# Specific element field file
#
# Don't modify this file directly !
# It's generated by features_class_maker.py from values in choices_1.json
#
# To modify the specific element fields:
#  - Modify the choices_1.json file
#  - On mac: cd pipeline, python feature_class_make.py

from typing import Optional, Literal
from pydantic import Field, BaseModel



class equipements_de_protection_individuelle_detecteur_fixe_0(BaseModel):
    type_de_control : Optional[Literal['Vérification périodique']] = Field(description="Le type de contrôle effectué sur l'élément, si présent.")
    date_de_mise_en_service : Optional[str] = Field(description="La date de mise en service du détecteur fixe, si présent.")
    en_location : Optional[bool] = Field(description=".")
    status : Optional[Literal['Actif', 'Au chômage', 'Au rebut', 'En stock', 'Au brouillon', '']] = Field(description="Le statut du détecteur fixe, si présent.")
    nombre_de_compose_s_detecte_s_par_l_installation : Optional[int] = Field(description="Le nombre de composés détectés par l'installation, si présent.")
    modele : Optional[str] = Field(description="Le modèle (ou type) du détecteur fixe, si présent.")
    nom_du_des_compose_s_detecte_s_par_l_installation : Optional[str] = Field(description="Le nom du ou des composés détectés par l'installation, si présent.")
    fabricant : Optional[str] = Field(description="La marque du fabricant du détecteur fixe, si présent.")
    nombre_de_detecteurs : Optional[int] = Field(description="Le nombre de détecteurs, si présent.")


class equipements_de_protection_individuelle_detecteur_fixe_1(BaseModel):
    autre_type_d_installation : Optional[str] = Field(description=".")
    type_d_installation : Optional[Literal['Centrale détection gaz', 'Autre', '']] = Field(description="Le type d'installation du détecteur fixe, si présent.")
    type_de_centrale_de_detection_gaz : Optional[Literal['Mono-voie', 'Multivoies', '']] = Field(description="Le type de centrale de détection de gaz, si présent.")
